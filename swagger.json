{
    "swagger": "2.0",
    "info": {
        "title": "ImageService API",
        "description": "Move your app forward with the ImageService API",
        "version": "1.0.0"
    },
    "host": "api.private.zuul.schibsted.io",
    "schemes": [
        "http"
    ],
    "basePath": "/v1",
    "produces": [
        "application/json"
    ],
    "paths": {
        "/file/{image_path}": {
            "post": {
                "tags": [
                    "Upload Service"
                ],
                "summary": "Uploads an image to the service",
                "description": "Uploads an image using the upload service",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Image already exists"
                    },
                    "201": {
                        "description": "Image succesfully uploaded"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                },
                "parameters": [
                    {
                        "name": "image_path",
                        "in": "path",
                        "description": "path to image, path/to/image.jpg",
                        "required": true,
                        "type": "string",
                        "items": {
                            "type": "string"
                        }
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Upload Service"
                ],
                "summary": "Deletes an image to the service",
                "description": "Deletes an image using the upload service",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Image deleted successfully"
                    }
                },
                "parameters": [
                    {
                        "name": "image_path",
                        "in": "path",
                        "description": "path to image, path/to/image.jpg",
                        "required": true,
                        "type": "string",
                        "items": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/{site_path}/{size}/{image_path}": {
            "get": {
                "tags": [
                    "Delivery Service"
                ],
                "summary": "get the image",
                "description": "get the image",
                "responses": {
                    "200": {
                        "description": "Image Found"
                    },
                    "404": {
                        "description": "Image Not Found"
                    }
                },
                "parameters": [
                    {
                        "name": "image_path",
                        "in": "path",
                        "description": "path to image, path/to/image.jpg",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "site_path",
                        "in": "path",
                        "description": "site path set when creating the account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "size",
                        "in": "path",
                        "description": "size of the image with the format widthxheight (300x300)",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/identity": {
            "post": {
                "tags": [
                    "Identity Service"
                ],
                "summary": "Identity Creation",
                "description": "The Identity endpoint creates a user in the service",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Identity created correctly"
                    }
                }
            }
        }
    }
}